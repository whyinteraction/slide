package classes {		import flash.display.Sprite;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.utils.Timer;		import DynamicSlideShow;	import gs.TweenLite;	import flash.display.Loader;	import classes.Samples;		public class Slides extends Sprite {						private var _slides:XMLList;		public static var _loader:Loader;		private var _request:URLRequest;				public var _totalSlides:int;		public var _indiArray:Array;				//private var _timer:Timer;		private var _delay:Number;		private var _tweentime:Number;							var sWidth:Number = 1000;		var sPos_X:Number = 0;		var sPos_Y:Number = 0;				var maskSprite:Sprite;									public function Slides(s:XMLList) {			// constructor code			this._slides = s;			// stage accessible, call init function			if (stage) 			init();             else addEventListener(Event.ADDED_TO_STAGE, init); 		}				private function init(event:Event = null):void{			if (event) 			removeEventListener(Event.ADDED_TO_STAGE, init); // called via event, remove it						addEventListener(Event.REMOVED_FROM_STAGE, remove);									_totalSlides = this._slides.length();			this.addChild(_loader);						maskSprite = new Sprite();			maskSprite.graphics.lineStyle();			maskSprite.graphics.beginFill(0xFFFFFF);			maskSprite.graphics.drawRect(0,0,1000,700);			_loader.mask = maskSprite;			this.addChild(maskSprite);						this._indiArray = new Array();						var indiMargin = 18;			var indiX = -(12*(_totalSlides)+indiMargin*(_totalSlides-1))/2;						for(var i:Number=0;i<_totalSlides;i++)			{				var indicator:Indicator = new Indicator();				MovieClip(this.parent).indiView.addChild(indicator);				indicator.gotoAndStop(1);				indicator.x=indiX;				indiX+=indiMargin+indicator.width;				indicator.addEventListener(MouseEvent.CLICK, onMouseClick);				this._indiArray.push(indicator);			}			this.loadNewSlide();					}				private function onMouseClick(e:MouseEvent):void		{			DynamicSlideShow.CURRENTSLIDE = this._indiArray.indexOf(e.currentTarget);						loadNewSlide();		}				public function loadNewSlide():void		{			var slideURL= "dat/"+this._slides.parent().parent().@Folder+"/"+this._slides.parent().@Folder+"/"+this._slides[DynamicSlideShow.CURRENTSLIDE].@Large;			_request = new URLRequest(slideURL);			trace(slideURL);			_loader.load(_request);						var indi:Indicator;			for each(indi in this._indiArray)			{				indi.gotoAndStop(1);			}						this._indiArray[DynamicSlideShow.CURRENTSLIDE].gotoAndStop(2);			//this._timer.stop();		}						private function remove(event:Event = null):void		{			if (event) 			removeEventListener(Event.REMOVED_FROM_STAGE, remove);						//this._timer.removeEventListener(TimerEvent.TIMER, loadNewSlide);			//this._loader = null;			trace("remove slides!");			this._request = null;			this._slides = null;			var indi:Indicator;						for each(indi in this._indiArray)			{				MovieClip(this.parent).indiView.removeChild(indi);			}			this._indiArray = null;		}					}	}