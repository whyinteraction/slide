package classes {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.net.URLRequest;		import flash.display.Loader;	import DynamicSlideShow;	import classes.Slides;	import gs.TweenLite;		public class Sample extends MovieClip {				private var _sample:XML;		private var _loader:Loader;		private var _request:URLRequest;		public var _slides:Slides;	    public var _tooltip:String;		public var _URL:String;				public function Sample(s:XML,sx:Number, sy:Number,sw:Number) {			// constructor code			this._sample = s;			this.x = sx;			this.y =  sy;			this.width= sw;			// stage accessible, call init function			if (stage) 			init();             else addEventListener(Event.ADDED_TO_STAGE, init); 		}						private function init(event:Event = null):void{			if (event) 			removeEventListener(Event.ADDED_TO_STAGE, init); // called via event, remove it						addEventListener(Event.REMOVED_FROM_STAGE, remove);			this.loadThumb();						if(this._sample.childIndex() == DynamicSlideShow.CURRENTSAMPLE)			{				this.gotoAndStop("2");				this.loadSlides();											}else{				this.gotoAndStop("1");				TweenLite.to(this, 0.1, {alpha:0.3});			}														}				private function onMouseClick(e:MouseEvent):void		{			//for(var i:Number=0;i<e.currentTarget.parent.numChildren;i++)//			{//				//trace(typeof(e.currentTarget.parent.getChildAt(i)));//				if(e.currentTarget.parent.getChildAt(i) is Sample){//					var thumb:Sample = e.currentTarget.parent.getChildAt(i);//					thumb.gotoAndStop("1");//					TweenLite.to(thumb, 1, {alpha:0.3});//					//					if(thumb._slides!=null)//					{//						//						this.parent.parent.parent.removeChild(thumb._slides);//						thumb._slides = null;//					}//				}//			}//			//			e.currentTarget.gotoAndStop("2");//			TweenLite.to(e.currentTarget, 1, {alpha:1});			DynamicSlideShow.CURRENTSAMPLE = e.currentTarget.parent.getChildIndex(e.currentTarget);			DynamicSlideShow.CURRENTSLIDE = 0;			this.loadSlides();		}				private function onMouseOver(e:MouseEvent):void		{			if (e)			this.removeEventListener(MouseEvent.MOUSE_OVER,onMouseOver);			this.addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);						Samples(this.parent.parent).tooltip.text=this._tooltip;			Samples(this.parent.parent).url.text=this._URL;						if(e.currentTarget.parent.getChildIndex(e.currentTarget)!=DynamicSlideShow.CURRENTSAMPLE)				TweenLite.to(e.currentTarget, 0.5, {alpha:0.6});		}				private function onMouseOut(e:MouseEvent):void		{			if(e)			this.removeEventListener(MouseEvent.MOUSE_OUT,onMouseOut);			this.addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);						Samples(this.parent.parent).tooltip.text=MovieClip(this.parent.getChildAt(DynamicSlideShow.CURRENTSAMPLE))._tooltip;			Samples(this.parent.parent).url.text=MovieClip(this.parent.getChildAt(DynamicSlideShow.CURRENTSAMPLE))._URL;			if(e.currentTarget.parent.getChildIndex(e.currentTarget)!=DynamicSlideShow.CURRENTSAMPLE)				TweenLite.to(e.currentTarget, 0.5, {alpha:0.3});		}						private function loadThumb()		{			var thumbURL= "dat/"+this._sample.parent().@Folder+"/"+this._sample.@Folder+"/"+this._sample.@Thumb;			this._tooltip = this._sample.@Caption;			this._URL = this._sample.@URL;			this._loader	= new Loader();			this._request = new URLRequest(thumbURL);						this.addChild(this._loader);						this._loader.x=0;			this._loader.y=25;			//this._loader.width = 75;			//this._loader.height = 55;						_loader.load(_request);			//_loader.addEventListener(Event.COMPLETE, sampleLoaded);			this.addEventListener(MouseEvent.CLICK, onMouseClick);			this.addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);		}				public function loadSlides(){						for(var i:Number=0;i<this.parent.numChildren;i++)			{				//trace(typeof(e.currentTarget.parent.getChildAt(i)));				if(this.parent.getChildAt(i) is Sample){					var thumb:Sample = Sample(this.parent.getChildAt(i));					thumb.gotoAndStop("1");					TweenLite.to(thumb, 1, {alpha:0.3});										if(thumb._slides!=null)					{												this.parent.parent.parent.removeChild(thumb._slides);						thumb._slides = null;					}				}			}						this.gotoAndStop("2");			TweenLite.to(this, 1, {alpha:1});						Samples(this.parent.parent).tooltip.text=this._tooltip;			Samples(this.parent.parent).url.text=this._URL;						this._slides = new Slides(this._sample.image);						this.parent.parent.parent.addChild(this._slides);			this._slides.x = DynamicSlideShow.SLIDE_X;			this._slides.y = DynamicSlideShow.SLIDE_Y;																}						public function remove(event:Event = null):void		{			if (event) 			removeEventListener(Event.REMOVED_FROM_STAGE, remove);			if(this._slides!=null)			{				trace("remove samples!");				this.parent.parent.parent.removeChild(this._slides);				this._slides = null;			}		}					}	}